<?xml version="1.0"?>
<!DOCTYPE MODE SYSTEM "xmode.dtd"><!--
  Markdown mode for jEdit by Ali Rantakari (http://hasseg.org)
  Last edited: April 23, 2009.

  - Markdown home: http://daringfireball.net/projects/markdown/
-->
<MODE>
  <PROPS>
    <PROPERTY NAME="tabSize" VALUE="4" />
    <PROPERTY NAME="indentSize" VALUE="4" />
    <PROPERTY NAME="maxLineLen" VALUE="120" />
  </PROPS>

  <!--
  First we handle block level html.

  The only restrictions are that block-level HTML elements — e.g. <div>, <table>, <pre>, <p>, etc. — must be separated
  from surrounding content by blank lines, and the start and end tags of the block should not be indented with tabs or
  spaces. Note that Markdown formatting syntax is not processed within block-level HTML tags. E.g., you can’t use
  Markdown-style *emphasis* inside an HTML block.
  -->
  <RULES IGNORE_CASE="TRUE">

    <!-- SGML comment -->
    <SPAN TYPE="COMMENT1">
      <BEGIN>&lt;!--</BEGIN>
      <END>--&gt;</END>
    </SPAN>

    <!-- JavaScript -->
    <SPAN AT_LINE_START="TRUE" TYPE="MARKUP" DELEGATE="html::JAVASCRIPT">
      <BEGIN>&lt;script</BEGIN>
      <END>&lt;/script&gt;</END>
    </SPAN>

    <!-- special hr case -->
    <SEQ_REGEXP AT_LINE_START="TRUE" TYPE="MARKUP">&lt;hr\b([^&lt;&gt;])*?/?&gt;</SEQ_REGEXP>

    <SPAN_REGEXP HASH_CHAR="&lt;" AT_LINE_START="TRUE" TYPE="MARKUP" DELEGATE="BLOCK_TAGS">
      <BEGIN>&lt;(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|noscript|form|fieldset|iframe|math|ins|del)\b</BEGIN>
      <END>&lt;/$1&gt;</END>
    </SPAN_REGEXP>

    <!-- any other tag that matches html keyword and indented 4 spaces or one tab is golden -->
   <!-- markup tags -->
    <IMPORT DELEGATE="MARKDOWN" />
  </RULES>

  <!-- Rules for Block level html only -->
  <RULES SET="BLOCK_TAGS" DEFAULT="MARKUP">

  <!-- any line indented less than 4 spaces is not valid markdown in block html -->
    <EOL_SPAN_REGEXP AT_LINE_START="TRUE" TYPE="INVALID">[\S]+</EOL_SPAN_REGEXP>
    <EOL_SPAN_REGEXP AT_LINE_START="TRUE" TYPE="INVALID"> {1,3}[\S]+</EOL_SPAN_REGEXP>
    <EOL_SPAN_REGEXP AT_LINE_START="TRUE" DELEGATE="html::MAIN">( {4}|\t)</EOL_SPAN_REGEXP>

    <SPAN TYPE="LITERAL1">
      <BEGIN>"</BEGIN>
      <END>"</END>
    </SPAN>
    <SPAN TYPE="LITERAL1">
      <BEGIN>'</BEGIN>
      <END>'</END>
    </SPAN>

    <SEQ TYPE="OPERATOR">=</SEQ>
  </RULES>

  <RULES SET="MARKDOWN" IGNORE_CASE="FALSE">

<!-- literal characters (i.e. cases where they won't
         specify formatting)
    -->
    <SEQ TYPE="NULL"> * </SEQ>
    <SEQ TYPE="NULL"> _ </SEQ>
    <SEQ TYPE="NULL">\][</SEQ>
    <SEQ_REGEXP TYPE="NULL" HASH_CHAR="\">\\[*_\\`\[\]\(\)\{\}#+-.!]</SEQ_REGEXP>

    <!-- inline code: `NSString* str = @"hi!";` -->
    <SPAN_REGEXP TYPE="LITERAL1" HASH_CHARS="`">
      <BEGIN>(`{1,2})</BEGIN>
      <END>$1</END>
    </SPAN_REGEXP>

     <!--
    headers (setext-style:)      header text
                                      ==============
    -->

    <!-- TODO: accept header text on previous line (how to match this? the
               regexp matchers can't cross line breaks)
    -->
    <EOL_SPAN_REGEXP TYPE="KEYWORD1" AT_LINE_START="TRUE" HASH_CHAR="=">[=-]+</EOL_SPAN_REGEXP>
    <!-- headers (atx-style:)         ## header text
    -->
    <EOL_SPAN_REGEXP TYPE="KEYWORD1" AT_LINE_START="TRUE" HASH_CHAR="#">#{1,6}[^#]</EOL_SPAN_REGEXP>


    <!-- horizontal rules -->
    <EOL_SPAN_REGEXP TYPE="KEYWORD1" HASH_CHARS="-*_" AT_LINE_START="TRUE">(\s*[-_*]+\s*){3,}[-*_\s]*$</EOL_SPAN_REGEXP>

    <!--
    List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be
    followed by one or more spaces or a tab.
    -->
    <!-- lists (unordered) -->
    <!-- <SEQ_REGEXP TYPE="KEYWORD2" AT_LINE_START="TRUE" HASH_CHARS="*+- &#09;">[ \t]{0,3}[*+-][ \t]+</SEQ_REGEXP> -->
    <SEQ_REGEXP TYPE="KEYWORD2" AT_LINE_START="TRUE" HASH_CHARS="*+- &#09;">[ \t]{0,}[*+-][ \t]+</SEQ_REGEXP>
    <!-- lists (ordered) -->
    <SEQ_REGEXP TYPE="KEYWORD2" AT_LINE_START="TRUE" HASH_CHARS="0123456789 &#09;">\s{0,3}\d+\.\s+</SEQ_REGEXP>


    <!-- link or image reference definition -->
    <!-- TODO: accept link's title attribute on the next line (how to match
               this? the regexp matchers can't cross line breaks)
    -->
    <EOL_SPAN_REGEXP TYPE="KEYWORD4" HASH_CHARS=" [" AT_LINE_START="TRUE">\s{0,3}\[.*?\]:\s+</EOL_SPAN_REGEXP>
    <!-- links or images (inline or reference) -->
    <SEQ_REGEXP TYPE="KEYWORD3" HASH_CHARS="![">!?\[</SEQ_REGEXP>
    <SEQ_REGEXP TYPE="KEYWORD3" HASH_CHARS="]">\]\s*[\(\[].*?[\)\]]</SEQ_REGEXP>



    <!-- emphasis (strong) -->
    <SPAN_REGEXP TYPE="MARKUP" HASH_CHARS="*_">
      <BEGIN>(\*\*|__)</BEGIN>
      <END>$1</END>
    </SPAN_REGEXP>
    <!-- emphasis (em) -->
    <SPAN_REGEXP TYPE="LITERAL4" HASH_CHARS="*_">
      <BEGIN>(\*|_)</BEGIN>
      <END>$1</END>
    </SPAN_REGEXP>


    <!-- blockquote start character -->
    <SEQ TYPE="LITERAL2" HASH_CHARS="&gt;" AT_LINE_START="TRUE">&gt;</SEQ>

  </RULES>

</MODE>
